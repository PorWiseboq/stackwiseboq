//- Auto[Generating:V1]--->
//- PLEASE DO NOT MODIFY BECAUSE YOUR CHANGES MAY BE LOST.

.
  <!DOCTYPE html>
  <html>
    <head>
      <meta name="viewport" content="width=device-width, initial-scale=1.0" />
      <title>authentication example</title>
      <meta name="description" content="" />
      <link rel="stylesheet" href="//staging.stackblend.com/css/embed.css">
      <style type="text/css"></style>
    </head>
    <body>
      
      <div internal-fsb-guid="0" class="container-fluid internal-fsb-begin">
        <div class="row internal-fsb-strict-layout internal-fsb-begin-layout">
          <div internal-fsb-guid="7c61bdec" class="internal-fsb-element col-12" style="margin-top: 100px;">
            <div class="container-fluid">
              <div class="row internal-fsb-strict-layout">
                <span internal-fsb-init-class="Project.Controls.LoginControl" internal-fsb-init-forward="{'classes': 'col-12 offset-0', 'styles': {}}"></span>
              </div>
            </div>
          </div>
        </div>
      </div>
      <script type="text/javascript" src="//staging.stackblend.com/js/Embed.bundle.js"></script>
      <script type="text/javascript">
      var Controller = /** @class */ (function () {
          function Controller() {
              this.dictionary = {};
          }
          Controller.prototype.register = function (guid, eventName, functionName) {
              if (!this.dictionary[guid])
                  this.dictionary[guid] = {};
              this.dictionary[guid][eventName] = functionName;
          };
          Controller.prototype.listen = function (guid) {
              if (this.dictionary[guid]) {
                  for (var key in this.dictionary[guid]) {
                      if (this.dictionary[guid].hasOwnProperty(key)) {
                          var eventName = key;
                          var functionName = this.dictionary[guid][key];
                          var element = this.getElementUsingGUID(guid);
                          element.addEventListener(eventName, this[functionName].bind(this), false);
                      }
                  }
              }
          };
          Controller.prototype.getElementUsingGUID = function (guid) {
              return document.querySelectorAll('[internal-fsb-guid="' + guid + '"]')[0];
          };
          return Controller;
      }());
      var controller = new Controller();
      
      </script>
      <link rel="stylesheet" type="text/css" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" />
      
      <script type="text/javascript">
      window.data = !{data} || null;
      </script>
      <script type="text/javascript" src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
      <script type="text/javascript" src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
      <script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
      <script type="text/javascript" src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
      <script type="text/javascript" src="/js/Site.bundle.js"></script>
    </body>
  </html>

//- <--- Auto[Generating:V1]
//- PLEASE DO NOT MODIFY BECAUSE YOUR CHANGES MAY BE LOST.